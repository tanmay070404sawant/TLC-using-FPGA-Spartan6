module initial_project( 
        input clk,rst, 
    output reg [2:0]light_A, 
    output reg [2:0]light_B, 
    output reg [2:0]light_C, 
    output reg [2:0]light_D, 
    output reg [2:0]light_M1, 
    output reg [2:0]light_M3, 
    output reg [2:0]light_M5, 
    output reg [2:0]light_M7 
    ); 
    parameter  S1=0, S2=1, S3 =2, S4=3, S5=4, S6=5, S7=6, S8=7, S9=8, S10=9, S11=10, S12=11; 
    reg [3:0]count; 
    reg[2:0] ps; 
    parameter  sec7=7,sec2=2; 
    always@(posedge clk or posedge rst) 
        begin 
        if(rst==1) 
        begin 
        ps<=S1; 
        count<=0; 
        end 
        else 
            case(ps) 
                S1: if(count<sec7) 
                        begin 
                        ps<=S1; 
                        count<=count+1; 
                        end 
                    else 
                        begin 
                        ps<=S2; 
                        count<=0; 
                        end 
                S2: if(count<sec2) 
                        begin 
                        ps<=S2; 
                        count<=count+1; 
                        end 
                    else 
                        begin 
                        ps<=S3; 
                        count<=0; 
                        end 
                S3: if(count<sec7) 
                        begin 
                        ps<=S3; 
                        count<=count+1; 
                        end 
                    else 
                        begin 
                        ps<=S4; 
                        count<=0; 
                        end 
                S4:if(count<sec2) 
                        begin 
                        ps<=S4; 
                        count<=count+1; 
                        end 
                    else 
                        begin 
                        ps<=S5; 
                        count<=0; 
                        end 
                S5:if(count<sec7) 
                        begin 
                        ps<=S5; 
                        count<=count+1; 
                        end 
                    else 
                        begin 
                        ps<=S6; 
                        count<=0; 
                        end 
                S6:if(count<sec2) 
                        begin 
                        ps<=S6; 
                        count<=count+1; 
                        end 
                    else 
                        begin 
                        ps<=S7; 
                        count<=0; 
                        end 
                S7:if(count<sec7) 
                        begin 
                        ps<=S7; 
                        count<=count+1; 
                        end 
                    else 
                        begin
                        ps<=S8; 
                        count<=0; 
                        end 
                S8:if(count<sec2) 
                        begin 
                        ps<=S8; 
                        count<=count+1; 
                        end 
                    else 
                        begin 
                        ps<=S9; 
                        count<=0; 
                        end 
                S9:if(count<sec7) 
                        begin 
                        ps<=S9; 
                        count<=count+1; 
                        end 
                    else 
                        begin 
                        ps<=S10; 
                        count<=0; 
                        end 
                S10:if(count<sec2) 
                        begin 
                        ps<=S10; 
                        count<=count+1; 
                        end 
                    else 
                        begin 
                        ps<=S11; 
                        count<=0; 
                        end 
                S11:if(count<sec7) 
                        begin 
                        ps<=S11; 
                        count<=count+1; 
                        end 
                    else 
                        begin 
                        ps<=S12; 
                        count<=0; 
                        end 
                S12:if(count<sec2) 
                        begin 
                        ps<=S12; 
                        count<=count+1; 
                        end 
                    else 
                        begin 
                        begin 
                        ps<=S1; 
                        count<=0; 
                        end 
                default: ps<=S1; 
                endcase 
            end    
            always@(*)     
            begin 
                case(ps) 
                    S1: 
                    begin 
                       light_A<=3'b001; 
                       light_B<=3'b001; 
                       light_C<=3'b100; 
                       light_D<=3'b100; 
                       light_M1<=3'b000; 
                       light_M3<=3'b000; 
                       light_M5<=3'b000; 
                       light_M7<=3'b000; 
                    end 
                    S2: 
                    begin 
                       light_A<=3'b001; 
                       light_B<=3'b010; 
                       light_C<=3'b100; 
                       light_D<=3'b100; 
                       light_M1<=3'b000; 
                       light_M3<=3'b000; 
                       light_M5<=3'b000; 
                       light_M7<=3'b000; 
                    end 
                    S3: 
                    begin 
                       light_A<=3'b001; 
                       light_B<=3'b100; 
                       light_C<=3'b100; 
                       light_D<=3'b100; 
                       light_M1<=3'b001; 
                       light_M3<=3'b000; 
                       light_M5<=3'b000; 
                       light_M7<=3'b000; 
                    end 
                    S4: 
                    begin 
                       light_A<=3'b010; 
                       light_B<=3'b100; 
                       light_C<=3'b100; 
                       light_D<=3'b100; 
                       light_M1<=3'b000; 
                       light_M3<=3'b000; 
                       light_M5<=3'b000; 
                       light_M7<=3'b000; 
                    end 
                    S5: 
                    begin 
                       light_A<=3'b100; 
                       light_B<=3'b001; 
                       light_C<=3'b100; 
                       light_D<=3'b100; 
                       light_M1<=3'b000; 
                       light_M3<=3'b001; 
                       light_M5<=3'b000; 
                       light_M7<=3'b000; 
                    end 
                    S6: 
                    begin 
                       light_A<=3'b100; 
                       light_B<=3'b010; 
                       light_C<=3'b100; 
                       light_D<=3'b100; 
                       light_M1<=3'b000; 
                       light_M3<=3'b000; 
                       light_M5<=3'b000; 
                       light_M7<=3'b000; 
                    end 
                    S7: 
                    begin 
                       light_A<=3'b100; 
                       light_B<=3'b100; 
                       light_C<=3'b001; 
                       light_D<=3'b001; 
                       light_M1<=3'b000; 
                       light_M3<=3'b000; 
                       light_M5<=3'b000; 
                       light_M7<=3'b000; 
                    end 
                    S8: 
                    begin 
                       light_A<=3'b100; 
                       light_B<=3'b100; 
                       light_C<=3'b001; 
                       light_D<=3'b010; 
                       light_M1<=3'b000; 
                       light_M3<=3'b000; 
                       light_M5<=3'b000; 
                       light_M7<=3'b000; 
                    end 
                    S9: 
                    begin 
                       light_A<=3'b100;
                       light_B<=3'b100; 
                       light_C<=3'b001; 
                       light_D<=3'b100; 
                       light_M1<=3'b000; 
                       light_M3<=3'b000; 
                       light_M5<=3'b001; 
                       light_M7<=3'b000; 
                    end 
                    S10: 
                    begin 
                       light_A<=3'b100; 
                       light_B<=3'b100; 
                       light_C<=3'b010; 
                       light_D<=3'b100; 
                       light_M1<=3'b000; 
                       light_M3<=3'b000; 
                       light_M5<=3'b000; 
                       light_M7<=3'b000; 
                    end 
                    S11: 
                    begin 
                       light_A<=3'b100; 
                       light_B<=3'b100; 
                       light_C<=3'b100; 
                       light_D<=3'b001; 
                       light_M1<=3'b000; 
                       light_M3<=3'b000; 
                       light_M5<=3'b000; 
                       light_M7<=3'b001; 
                    end 
                    S12: 
                    begin 
                       light_A<=3'b100; 
                       light_B<=3'b100; 
                       light_C<=3'b100; 
                       light_D<=3'b010; 
                       light_M1<=3'b000; 
                       light_M3<=3'b000; 
                       light_M5<=3'b000; 
                       light_M7<=3'b000; 
                    end 
                    default: 
                    begin 
                       light_A<=3'b000; 
                       light_B<=3'b000; 
                       light_C<=3'b000; 
                       light_D<=3'b000; 
                       light_M1<=3'b000; 
                       light_M3<=3'b000; 
                       light_M5<=3'b000;
                       light_M7<=3'b000; 
                    end 
                    endcase 
            end               
endmodule
